version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: city_zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka
    container_name: city_kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka  # Use the name of the Kafka service as the hostname
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "city_topic:1:1"
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_LOG_RETENTION_BYTES: 4073741824
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_RETENTION_CHECK_INTERVAL_MS: 300000
    restart: unless-stopped


  clickhouse:
    image: yandex/clickhouse-server
    container_name: city_clickhouse
    ports:
      - "9000:9000"
    restart: unless-stopped


  grafana:
    image: grafana/grafana
    container_name: city_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
    depends_on:
      - clickhouse
    restart: unless-stopped


  data_producer:
    image: python:3.8
    container_name: city_data_producer
    volumes:  #
      - ./producer.py:/app/producer.py
      - ./sensore.py:/app/sensore.py
      - ./temperature.py:/app/temperature.py
      - ./humidity.py:/app/humidity.py
    depends_on:
      - kafka
    command: ["sh", "-c", "pip install kafka-python==2.0.2 && python /app/producer.py"]


  data_consumer:
    image: python:3.8
    container_name: city_data_consumer
    volumes:
      - ./consumer.py:/app/consumer.py
    depends_on:
      - kafka
      - clickhouse
    command: ["sh", "-c", "pip install kafka-python==2.0.2 clickhouse-driver==0.2.0 && python /app/consumer.py"]